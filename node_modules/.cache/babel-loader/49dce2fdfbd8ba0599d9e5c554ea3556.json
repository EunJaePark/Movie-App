{"remainingRequest":"/Users/eunjae/Desktop/github/Movie-App/node_modules/babel-loader/lib/index.js!/Users/eunjae/Desktop/github/Movie-App/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/eunjae/Desktop/github/Movie-App/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eunjae/Desktop/github/Movie-App/src/components/InformConts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eunjae/Desktop/github/Movie-App/src/components/InformConts.vue","mtime":1611416290744},{"path":"/Users/eunjae/Desktop/github/Movie-App/node_modules/cache-loader/dist/cjs.js","mtime":1591071293823},{"path":"/Users/eunjae/Desktop/github/Movie-App/node_modules/babel-loader/lib/index.js","mtime":1591071293737},{"path":"/Users/eunjae/Desktop/github/Movie-App/node_modules/cache-loader/dist/cjs.js","mtime":1591071293823},{"path":"/Users/eunjae/Desktop/github/Movie-App/node_modules/vue-loader/lib/index.js","mtime":1591071296053}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["InformConts.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"infromConts\" v-if=\"clickMovieData.Data\">\n    <!-- {{ clickMovieData.Data[0].Result[0] }} -->\n      <div class=\"topData clear\">\n        <img \n          class=\"poster\"                    \n          v-bind:src=\"posterURL(clickMovieData.Data[0].Result[0].posters)\" \n          v-bind:alt=\"textEdit(clickMovieData.Data[0].Result[0].title)\"\n        />\n        <div class=\"summaryBox\">\n          <div class=\"title\">\n            <h2>{{ textEdit(clickMovieData.Data[0].Result[0].title) }} ( {{ clickMovieData.Data[0].Result[0].prodYear }} )</h2>\n            <p class=\"engTitle\">{{ clickMovieData.Data[0].Result[0].titleEng }}</p>\n          </div><!--.title-->\n          <div class=\"textBox\">\n            <div class=\"textList\">\n              <span>{{ clickMovieData.Data[0].Result[0].genre }}</span>\n              <span>{{ clickMovieData.Data[0].Result[0].nation }}</span>\n            </div><!--.textInform-->\n            <div class=\"textList\">\n              <span>{{ `${dateEdit(clickMovieData.Data[0].Result[0].repRlsDate)} 개봉` }}</span>\n              <span>{{ clickMovieData.Data[0].Result[0].runtime }}분</span>\n              <span>{{ clickMovieData.Data[0].Result[0].rating }}</span>\n            </div><!--.textInform-->\n            <p v-if=\"clickMovieData.Data[0].Result[0].directors.director[0].directorNm !== ''\">(감독) {{ textEdit(clickMovieData.Data[0].Result[0].directors.director[0].directorNm) }}</p>\n\n            <a v-bind:href=\"clickMovieData.Data[0].Result[0].kmdbUrl\" target=\"blanket\">영화 상세정보</a>\n          </div><!--.textBox-->\n\n          <div class=\"likeScoreBox\">\n            <div class=\"likeBtn\" >\n              <button \n                @click=\"likeMovie(textEdit(clickMovieData.Data[0].Result[0].title), textEdit(clickMovieData.Data[0].Result[0].directors.director[0].directorNm), clickMovieData.Data[0].Result[0].movieSeq)\"\n                :class=\"{'fillHeart':likeCheck === 'true'}\">❤</button>\n            </div>\n          </div><!--.likeScoreBox-->\n          <br/>\n          <!-- <p>영상url: {{ clickMovieData.vods.vod[0].vodUrl }}</p>\n          <video :src=\"clickMovieData.vods.vod[0].vodUrl\"></video> -->\n          <br/>\n        </div><!--.summaryBox-->\n      </div><!--.topData-->\n\n      <div class=\"detailBox\">\n        <!-- 한문장의 슬로건(줄거리 중 첫 문장!)-->\n        <p \n          class=\"movieSlogan\"\n          v-if=\"clickMovieData.Data[0].Result[0].plots.plot[0].plotText !== ''\">\n          {{ sloganEdit(clickMovieData.Data[0].Result[0].plots.plot[0].plotText) }}\n        </p>\n        <!-- 줄거리 -->\n          <p\n            class=\"movieStory\" \n            v-if=\"clickMovieData.Data[0].Result[0].plots.plot[0].plotText !== ''\">\n            {{ storyEdit(clickMovieData.Data[0].Result[0].plots.plot[0].plotText) }}\n          </p>\n\n          <div class=\"movieKeyword\" v-if=\"clickMovieData.Data[0].Result[0].keywords\">\n            <form @click=\"btnSearch('keywordCK')\">\n              <button \n                v-for=\"(keyword, keywordIndex) in keywordNum(clickMovieData.Data[0].Result[0].keywords)\" :key=\"keywordIndex\"\n                @click=\"searchText = keyWord(clickMovieData.Data[0].Result[0].keywords, keywordIndex)\">\n                {{ `# ${keyWord(clickMovieData.Data[0].Result[0].keywords, keywordIndex)}` }}\n              </button>\n            </form>\n          </div>\n          \n          <div class=\"movieStlls\" v-if=\"clickMovieData.Data[0].Result[0].stlls\">\n            <p>{{ `${photoIndex(clickMovieData.Data[0].Result[0].stlls)}장의 스틸컷` }}</p>\n            <div  v-for=\"(photo, imgIndex) in photoIndex(clickMovieData.Data[0].Result[0].stlls)\" :key=\"imgIndex\" >\n              <img :src=\"stllImgURL(clickMovieData.Data[0].Result[0].stlls, imgIndex)\" alt=\"\" />\n              <!-- {{ imgIndex }} -->\n            </div>\n          </div>\n\n          <div class=\"movieActor clear\" v-if=\" clickMovieData.Data[0].Result[0].actors.actor[0].actorNm\">\n            <p>출연 / 스탭</p>\n            <div\n              class=\"actorsBox\"\n              v-for=\"(actorName, index) in actorNum((clickMovieData.Data[0].Result[0].actors.actor), actors)\" \n              v-bind:key=\"index\"><!--key를 actorName.actorId로 주니까 데이터 자체에 같은 배우명단이 2개인 경우가 있어서 actorId가 중복된다는 error가 발생. 일단 에러 없애기 위해서 key를 임의의 index로 주었다.-->\n                  <span class=\"krNm\">{{ actorEdit(actorName.actorNm) }} </span>\n                  <br/>\n                  <span class=\"enNm\">{{ actorEdit(actorName.actorEnNm) }}</span> \n            </div><!--.actorsBox-->\n\n            <button \n              v-if=\"clickMovieData.Data[0].Result[0].actors.actor.length > 10\"\n              @click=\"actorMore(clickMovieData.Data[0].Result[0].actors.actor.length, 'yes')\">{{ actorsBtnText }}</button>\n          </div><!--.movieActor-->\n      </div><!--.detailBox-->\n      \n      <br/>\n      <!-- <div style=\"border:2px solid red;\">클릭한 id 영화 데이터: {{ clickMovieData }}</div> -->\n      \n  </div>\n</template>\n\n<script>\nimport { saveValue, saveType, deleteCookie, saveFirstKey, saveLike, getLike, saveLikePocket, getLikePocket, getIDFromCookie } from '../utils/cookies';\n\nexport default {\n  data() {\n    return {\n      imgIndex: 0,\n      keywordIndex: 0,\n      searchText: '',\n      key: '', // 키워드 중 첫 번째만 추출.(SimilarMovie.vue로 전달할 것)\n      actors: 10, // 배우 불러오는 수.(더보기 버튼 클릭시 전체 배우 수만큼 숫자 늘어남)\n      actorsAllCheck: 'no',\n      actorsBtnText: '더보기',\n      likeCheck: '',\n    }\n  },\n  computed: {\n    clickMovieData() {\n      // return this.$store.state.clickMovie;\n      return this.$store.state.moviedata;\n    },\n    getCookieLike() {\n      return getLike();\n    },\n  },\n  created() {   \n    console.log(this.$store.state.movieID);\n    \n    // 영화 상세정보 불러옴.(cookie이용해서 api만들어서 가져올 것임.)\n    const idAPI = this.$store.state.movieID;\n    console.log(idAPI);\n    \n    this.$store.dispatch('FETCH_TITLE', idAPI);\n\n\n    // // cookie의 like와 movie_ID 내용을 확인해서 좋아요 버튼 활셩화 유무 판단.\n    // console.log('like확인!!!');\n    // console.log(this.getCookieLike);\n    \n    // this.likeCheck = this.getCookieLike;\n    // console.log(this.likeCheck);\n\n\n    // cookie의 likePocket에 영화정보가 있으면 data의 likeCheck를 true로 해줌.(페이지 로딩시 - 즉, 다른 페이지 갔다가 다시 들어와도 그대로 기록이 남아있도록 해주는 것.)\n    let getMovieID = getIDFromCookie();   // MovieConts에서 포스터 클릭 시 cookie로 넘겨준 이 영화 정보 가져옴.\n    let getLike = getLikePocket(); // cookie에 있는 likePocket 내용 가져옴.\n    let likePKdiv = getLike.split('['); // likePocket의 내용들(객체화시킴)을 배열로 바꿔줌.\n\n    console.log(getMovieID.replace(/(\\s*)/g, ''));    \n\n    for(let i = 1; i < likePKdiv.length; i++) {\n      let getLikeDiv = likePKdiv[i].replace(/[\\{\\}\\]]/g, '').split('\"')[3]; // ㅣlikePocket에 들어있는 영화정보들 일일히 비교하기위해 영화정보만 분리시킴.(like정보도 함께 있었기 때문.)\n      console.log(getLikeDiv.replace(/(\\s*)/g, ''));\n      let like = likePKdiv[i].replace(/[\\{\\}\\]]/g, '').split('\"')[7];\n      console.log(like);\n      \n      \n      // getMovieID와 getLikeDiv의 공백 수가 달라서 아예 공백을 없애서 비교해줌.\n      if(getLikeDiv.replace(/(\\s*)/g, '') === getMovieID.replace(/(\\s*)/g, '')) { // 현재 상세페이지의 영화가 likePocket에 있으면 좋아요 버튼 true로 줌.\n        console.log('좋아요 포켓에 이 영화 있다.');\n        this.likeCheck = like;\n        break; // for문 돌면서 좋아요 포켓에 영화가 있다는 결과가 나오면 더이상 함수 돌리지 않는다.\n      } else {\n        console.log('좋아요 포켓에 이 영화 없습니다..');\n        \n        this.likeCheck = 'false';\n      }\n    }\n    \n    \n\n    \n  },\n  // 메서드의 actorNum을 실행시키기 위해서 beforeUpdated를 작성해준 것이었는데, 없어도 알아서 작동된다. 태그에 v-for로 넣어줬더니.\n  // beforeUpdated(){\n  //   console.log('actornum실행해라~~');\n    \n  //   this.actorNum();\n  // },\n  methods: {\n    textEdit(text) {\n      // 검색어를 나타내는 !HE, !HS글자 삭제.\n      return text.replace(/!HE|!HS/g, '');\n    },\n    posterURL(url) {            \n      if(url === '') {   // url이 없을 경우\n        // poster url주소가 없을 경우 빈 이미지 추출.\n        return 'http://placehold.it/213x303';\n      }else if(url.indexOf('|') === -1) {   // url이 1개일 경우\n        return url;\n      }else if(url.indexOf('|')) {   // url이 2개 이상일 경우  \n        return url.substring(0, url.indexOf('|')); \n      } \n    },\n    // 영화 개봉일자 편집.\n    dateEdit(date) {\n      return date.replace(/(\\d{4})(\\d{2})(\\d{2})/, '$1.$2.$3');\n      // \\d : 숫자 문자가 아닌 문자에 대응된다. [^0-9]와 동일하다.\n      // {n} : 앞 표현식이 n번 나타나는 부분에 대응된다. n은 반드시 양의 정수여야 한다.\n      // 즉, \\d{4}는 앞에서 4번째까지의 [0-9]까지 해당하는 숫자를 지칭하게 되는 것이다.\n    },\n    // 줄거리 중 제일 앞 문장만 추출.\n    sloganEdit(story) {\n      return story.substring(0, story.indexOf('!')+1);\n    },\n    // 줄거리 중 제일 앞 문장 제외한 나머지 모든 줄거리 추출.\n    storyEdit(story) {\n      return story.substring(story.indexOf('!')+1, story.length)\n    },\n    // keyword 개수 구함.\n    keywordNum(key) {\n      if(key === '') {\n        return this.keywordIndex = 0;\n      } else if(key.indexOf(',') === -1) {\n        return this.keywordIndex = 1;\n      } else if(key.indexOf(',')) {\n        return this.keywordIndex = key.match(/,/g).length + 1;\n      } \n    },\n    // keyword하나씩 넣어줌. + data의 keywordFirst에 첫 번째 키워드 넣어줌.\n    keyWord(key, index) {\n      if(key === '') return;\n      else if(key.indexOf(',') === -1) {\n        // this.keywordFirst = key;\n        return key;\n      }\n      else if(key.indexOf(',')) {\n        // this.keywordFirst = key.split(',')[0];\n        return key.split(',')[index];\n      }\n    },\n    // 스틸컷 img 개수 세는 함수.\n    photoIndex(photoUrl) {\n      if(photoUrl === '') {\n        return this.imgIndex = 0;\n      } else if(photoUrl.indexOf('|') === -1) {     \n        return this.imgIndex = 1;\n      } else if(photoUrl.indexOf('|')) { // http의 개수에 따라 v-for이용해 이미지 태그 생성.\n        return this.imgIndex = photoUrl.match(/http/g).length;\n      }\n    },\n    stllImgURL(url, index) {            \n      if(url === '') {   // url이 없을 경우\n        // poster url주소가 없을 경우 빈 이미지 추출.\n        return 'http://placehold.it/144x86';\n      } else if(url.indexOf('|') === -1) {   // url이 1개일 경우\n        return url;\n      } else if(url.indexOf('|')) {   // url이 2개 이상일 경우  \n        return url.split('|')[index];  // split를 이용해 '|'를 기준으로 url을 나눔. 그 뒤에 각 index에 맞는 사진url을 return.\n      } \n    },\n    // 배우가 10명 초과일 경우 10명까지만 추출함.\n    actorNum(actors, num) {\n      console.log(actors.length);\n      return actors.slice(0, num);\n    },\n    // '더보기'버튼 클릭하면 모든 배우 목록이 보이도록 해줌.\n    actorMore(all, moreCheck) {\n      if(this.actorsAllCheck === 'no') {\n        this.actors = all;\n        this.actorsAllCheck = moreCheck;\n        this.actorsBtnText = '접기';\n      } else if(this.actorsAllCheck === 'yes') {\n        this.actors = 10;\n        this.actorsAllCheck = 'no';\n        this.actorsBtnText = '더보기';\n      }     \n    },\n    // 배우 이름에 !HE, !HS 제거해줌.\n    actorEdit(name) {\n      if(name.match(/!HE | !HS/gi)) return name.replace(/!HE | !HS/g, '');\n      else return name;\n    },\n\n    // keyword 클릭하면 해당 키워드별 영화목록 보이게 함.\n    btnSearch(check) {\n      // 영화검색위해 입력한 검색어 + 검색타입 cookie에 저장해줌.\n      saveValue(`keyword=${this.searchText}`);\n      saveType(this.check); \n\n      const searchTxtBox = {\n        searchTxt : `keyword=${this.searchText}`, \n        check : check,\n      };\n      console.log(searchTxtBox);\n            \n      // 바로 state에 겁색어랑 체크박스확인ㅇ데이터 넣어줘봄.\n      this.$store.commit('STATE_UTL', searchTxtBox);\n\n      // router이동 주소 보내줌.\n      this.$router.push('/movie');\n\n\n      // input창 비워줌.\n      this.searchText = '';\n    },\n    // like버튼 클릭 시 data에 likeCheck데이터 전달.\n    likeMovie(title, director, movieSeq) {\n      // 좋아요 버튼 값과 해당 영화의 정보를 '좋아요주머니'배열 속 요소로 넣어주자.\n\n\n      if(this.likeCheck === 'false') {\n        this.likeCheck = 'true';\n\n        // let thisLikeInform = 'true';\n        // let thisLikeInform = {\n        //   // title: 'title=진도&director=유동종&movieSeq=09848',\n        //   // movieID: `title=${title}&director=${director}&movieSeq=${movieSeq}`,\n        //   likeCK: 'true'\n        // };   \n\n        // saveLikePocket에 넣어주기 위해 배열로 만들음.(중복되니까 나중에 정리할 방법 생각하기)\n        let likePocket = [ \n          {movieID: `title=${title}&director=${director}&movieSeq=${movieSeq}`},\n          {likeCK: 'true'}\n        ];\n\n        \n        // let getLikePK = getLikePocket();\n        // console.log(getLikePK);\n        // console.log(getLikePK.split('['));\n        // let likePKdiv = getLikePK.split('[');\n        // console.log(likePKdiv[1].replace(/[\\{\\}\\]]/g, '').slice(likePKdiv[1].indexOf(':'), likePKdiv[1].indexOf(',')-2).replace(/\\\"/g, '')); // likePocket에 들어있는 영화 정보 하나씩 추출 후 .\n        // console.log(likePKdiv);\n        \n        // console.log(thisLikeInform.movieID);\n\n        // for(let i = 0; i < likePKdiv.length; i++) {\n        //   let movieInform = likePKdiv[i].replace(/[\\{\\}\\]]/g, '').slice(likePKdiv[1].indexOf(':'), likePKdiv[1].indexOf(',')-2).replace(/\\\"/g, '');\n        //   if(movieInform !== thisLikeInform.movieID) {\n        //     console.log('영화가 pocket에 없다!!!');\n            \n        //   }\n        // }\n\n        // cookie에 like값 넣어줌.\n        // saveLike(thisLikeInform); \n        // cookie의 likePocket에 like버튼 누른 영화정보 넣어줌.\n        saveLikePocket(likePocket);\n      } else {\n        console.log('좋아요 취소합니다!!!!');\n        \n        this.likeCheck = 'false';\n\n        let likePocket = 'false';\n        saveLikePocket(likePocket);\n\n\n        // let thisLikeInform = 'false';\n        // let thisLikeInform = {\n        //   // title: 'title=진도&director=유동종&movieSeq=09848',\n        //   // movieID: `title=${title}&director=${director}&movieSeq=${movieSeq}`,\n        //   likeCK: 'false'\n        // };\n\n        // saveLike(thisLikeInform);\n\n        // 쿠키의 likePocket에 저장된 정보 가져와서 좋아요 취소한 영화 데이터 삭제시켜 줘야함.\n\n\n\n\n\n        // let likePocket = [ // saveLikePocket에 넣어주기 위해 배열로 만들음.(중복되니까 나중에 정리할 방법 생각하기)\n        //   {movieID: `title=${title}&director=${director}&movieSeq=${movieSeq}`},\n        //   {likeCK: 'false'}\n        // ];\n\n        // // 쿠키의 likePocket에 저장된 정보 가져와서 좋아요 취소한 영화 데이터 삭제시켜 줘야함.\n        // let getLikePK = getLikePocket();\n        // let likePKdiv = getLikePK.split('[');\n        // console.log('likePocket에 저장된 영화 데이터 불러온다!!!!');        \n        // console.log(getLikePK);\n        // console.log(likePKdiv);\n        \n        // for(let i = 0; i < likePKdiv.length; i++) {\n        //   // let getLikeDiv = likePKdiv[i].replace(/[\\{\\}\\]]/g, '').split('\"');\n        //   let newLikeMovie = likePocket[0][Object.keys(likePocket[0])[0]];\n\n        //   console.log(likePKdiv[i].replace(/[\\{\\}\\]]/g, '').split('\"')[3]);\n        //   if(likePKdiv[i].replace(/[\\{\\}\\]]/g, '').split('\"')[3] === newLikeMovie) {\n        //     saveLikePocket(likePKdiv[i].replace('\"true\"', '\"false\"'));\n        //   }\n        // }\n        // console.log(likePocket[0][Object.keys(likePocket[0])[0]]);\n        \n        // saveLikePocket(likePocket);\n      }\n      console.log(this.likeCheck);\n    },\n  }\n}\n\n</script>\n\n<style>\n\n</style>"],"sourceRoot":"src/components"}]}